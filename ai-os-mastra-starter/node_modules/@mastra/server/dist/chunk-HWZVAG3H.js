import { validateBody } from './chunk-H5PTF3Y4.js';
import { handleError } from './chunk-M5ABIP7D.js';
import { __export } from './chunk-MLKGABMK.js';

// src/server/handlers/logs.ts
var logs_exports = {};
__export(logs_exports, {
  getLogTransports: () => getLogTransports,
  getLogsByRunIdHandler: () => getLogsByRunIdHandler,
  getLogsHandler: () => getLogsHandler
});
async function getLogsHandler({
  mastra,
  transportId
}) {
  try {
    validateBody({ transportId });
    const logs = await mastra.getLogs(transportId);
    return logs;
  } catch (error) {
    return handleError(error, "Error getting logs");
  }
}
async function getLogsByRunIdHandler({
  mastra,
  runId,
  transportId
}) {
  try {
    validateBody({ runId, transportId });
    const logs = await mastra.getLogsByRunId({ runId, transportId });
    return logs;
  } catch (error) {
    return handleError(error, "Error getting logs by run ID");
  }
}
async function getLogTransports({ mastra }) {
  try {
    const logger = mastra.getLogger();
    const transports = logger.transports;
    return {
      transports: transports ? Object.keys(transports) : []
    };
  } catch (error) {
    return handleError(error, "Error getting log Transports");
  }
}

export { getLogTransports, getLogsByRunIdHandler, getLogsHandler, logs_exports };
